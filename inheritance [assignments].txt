// A :parent
// add :method :no return and no argument 
// sub :method :no return and  argument 
// B :child 
// multi:method : return and no argument 
// div:method : return and  argument 
// Main 
// B k through all method access krogey 
// constant
// user input 

import java.util.Scanner;

class A {
   void add()
   {
    // no return and no argument 
    Scanner sc = new Scanner(System.in);
    System.out.println("enter a");
    int a = sc.nextInt();
    System.out.println("enter b");
    int b = sc.nextInt();
    int c = a+b;
    System.out.println(c + " addition value ");
   }
   void sub(int a,int b)
   {
    // :no return and  argument 
    int c = a - b;
    System.out.println(c + " substration value ");
   }
}
class B extends  A{
    int multi()
    {
      // return and no argument
    Scanner sc = new Scanner(System.in);
    System.out.println("enter a");
    int a = sc.nextInt();
    System.out.println("enter b");
    int b = sc.nextInt();
    int c = a*b;
    System.out.println(c + " multipilation value ");
      return c;
    }
    int div(int a,int b)
    { 
      int c = a/b;
      System.out.println(c + " division value");
      return 0;
    }
}
public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    System.out.println("sub value enter a");
    int a = sc.nextInt();
    System.out.println("sub value enter b");
    int b = sc.nextInt();
    System.out.println("div value enter c");
    int c = sc.nextInt();
    System.out.println("div value enter d");
    int d = sc.nextInt();
    B k = new B();
    k.add();
    k.sub(a, b);
    k.multi();
    k.div(a, b);
  }
}



// A :parent
// add :method :no return and no argument 
// sub :method :no return and  argument 
// B :child 
// multi:method : return and no argument 
// div:method : return and  argument 
// Main 
// B k through all method access krogey 
// constant
// user input 

import java.util.Scanner;

class A {
   void add()
   {
    // no return and no argument 
    
    int a = 23;
    int b = 10;
    int c = a+b;
    System.out.println(c + " addition value ");
   }
   void sub(int a,int b)
   {
    // :no return and  argument 
    int c = a - b;
    System.out.println(c + " substration value ");
   }
}
class B extends  A{
    int multi()
    {
      // return and no argument
    int a = 12;
    int b = 12;
    int c = a*b;
    System.out.println(c + " multipilation value ");
      return c;
    }
    int div(int a,int b)
    { 
      int c = a/b;
      System.out.println(c + " division value");
      return 0;
    }
}
public class Main {

  public static void main(String[] args) {
    B k = new B();
    k.add();
    k.sub(23,10);
    k.multi();
    k.div(90,10);
  }
}



// A :parent
// add :method :no return and no argument 
// sub :method :no return and  argument 
// Main :child 
// multi:method : return and no argument 
// div:method : return and  argument 
// Main k through all method access krogey 
// constant
// user input  

import java.util.Scanner;

class A {
   void add()
   {
    // no return and no argument 
    Scanner sc = new Scanner(System.in);
    System.out.println("enter a");
    int a = sc.nextInt();
    System.out.println("enter b");
    int b = sc.nextInt();
    int c = a+b;
    System.out.println(c + " addition value ");
   }
   void sub(int a,int b)
   {
    // :no return and  argument 
    int c = a - b;
    System.out.println(c + " substration value ");
   }
}

public class Main extends A {
  int multi()
  {
    // return and no argument
  Scanner sc = new Scanner(System.in);
  System.out.println("enter a");
  int a = sc.nextInt();
  System.out.println("enter b");
  int b = sc.nextInt();
  int c = a*b;
  System.out.println(c + " multipilation value ");
    return c;
  }
  int div(int a,int b)
  { 
    int c = a/b;
    System.out.println(c + " division value");
    return 0;
  }
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    System.out.println("sub value enter a");
    int a = sc.nextInt();
    System.out.println("sub value enter b");
    int b = sc.nextInt();
    System.out.println("div value enter c");
    int c = sc.nextInt();
    System.out.println("div value enter d");
    int d = sc.nextInt();
    Main k = new Main();
    k.add();
    k.sub(a, b);
    k.multi();
    k.div(a, b);
  }
}



// A :parent
// add :method :no return and no argument 
// sub :method :no return and  argument 
// Main :child 
// multi:method : return and no argument 
// div:method : return and  argument 
// Main k through all method access krogey 
// constant
// user input  

class A {
   void add()
   {
    // no return and no argument 
    
    int a = 23;
    int b = 10;
    int c = a+b;
    System.out.println(c + " addition value ");
   }
   void sub(int a,int b)
   {
    // :no return and  argument 
    int c = a - b;
    System.out.println(c + " substration value ");
   }
}
public class Main extends A {
  int multi()
    {
      // return and no argument
    int a = 12;
    int b = 12;
    int c = a*b;
    System.out.println(c + " multipilation value ");
      return c;
    }
    int div(int a,int b)
    { 
      int c = a/b;
      System.out.println(c + " division value");
      return 0;
    }

  public static void main(String[] args) {
    Main k = new Main();
    k.add();
    k.sub(23,10);
    k.multi();
    k.div(90,10);
  }
}




// A :parent
// A() :multi:default
// add :method :no return and no argument 
// sub :method :no return and  argument 
// Main :child 
// Main() :add :parameterised  :constructor 
// multi:method : return and no argument 
// div:method : return and  argument 
// Main k through all method access krogey 
// constant
// user input 

class A {
  A()
  {
   int a = 12;
   int b = 23;
   int c = a*b;
   System.out.println(c + "default constecter multi ");
  }
  void add()
  {
   // no return and no argument 
   
   int a = 23;
   int b = 10;
   int c = a+b;
   System.out.println(c + " addition value ");
  }
  void sub(int a,int b)
  {
   // :no return and  argument 
   int c = a - b;
   System.out.println(c + " substration value ");
  }
}
public class Main extends A {
 Main (int a,int b)
 {
  super();
   int c = a + b;
   System.out.println(c + "parameter consterctor add ");
 }
 int multi()
   {
     // return and no argument
   int a = 12;
   int b = 12;
   int c = a*b;
   System.out.println(c + " multipilation value ");
     return c;
   }
   int div(int a,int b)
   { 
     int c = a/b;
     System.out.println(c + " division value");
     return 0;
   }

 public static void main(String[] args) {
   Main k = new Main(12,34);
   k.add();
   k.sub(23,10);
   k.multi();
   k.div(90,10);
 }
}



// A :parent
// A() :multi:default
// add :method :no return and no argument 
// sub :method :no return and  argument 
// Main :child 
// Main() :add :parameterised  :constructor 
// multi:method : return and no argument 
// div:method : return and  argument 
// Main k through all method access krogey 
// constant
// user input 


import java.util.*;

class A {
  A()
  {
    Scanner sc = new Scanner(System.in);
    System.out.println("enter a");
    int a = sc.nextInt();
    System.out.println("enter b");
    int b = sc.nextInt();
    int c = a*b;
    System.out.println(c + " default constractar");
  }

   void add()
   {
    // no return and no argument 
    Scanner sc = new Scanner(System.in);
    System.out.println("enter a");
    int a = sc.nextInt();
    System.out.println("enter b");
    int b = sc.nextInt();
    int c = a+b;
    System.out.println(c + " addition value ");
   }
   void sub(int a,int b)
   {
    // :no return and  argument 
    int c = a - b;
    System.out.println(c + " substration value ");
   }
}

public class Main extends A {
  Main (int a,int b)
  {
    int c = a + b;
    System.out.println(c + " perameter constrater ");
  }
  int multi()
  {
    // return and no argument
  Scanner sc = new Scanner(System.in);
  System.out.println("enter a");
  int a = sc.nextInt();
  System.out.println("enter b");
  int b = sc.nextInt();
  int c = a*b;
  System.out.println(c + " multipilation value ");
    return c;
  }
  int div(int a,int b)
  { 
    int c = a/b;
    System.out.println(c + " division value");
    return 0;
  }
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    System.out.println("controter add value e ");
    int e = sc.nextInt();
    System.out.println("controter add value f ");
    int f = sc.nextInt();
    System.out.println("sub value enter a");
    int a = sc.nextInt();
    System.out.println("sub value enter b");
    int b = sc.nextInt();
    System.out.println("div value enter c");
    int c = sc.nextInt();
    System.out.println("div value enter d");
    int d = sc.nextInt();
    Main k = new Main(e,f);
    k.add();
    k.sub(a, b);
    k.multi();
    k.div(a, b);
  }
}



// A :parent
// add :getter and setter  method  
// B :child 
// multi :getter and setter method 
// Main 
// B k through all method access krogey 
// constant
// user input 


import java.util.*;

class A {
    int a ;
    int b;
    void setA(int a,int b)
    {
      this.a = a;
      this.b = b;
    }
    int getA()
    {
      return a;
    }
    int getA1()
    {
      return b;
    }
    void add()
    {
      int c = a + b;
      System.out.println(c + " ");
    }
}
class B extends A{
    int a;
    int b;
    void setB(int a,int b)
    {
      this.a = a;
      this.b = b;
    }
    int getB()
    {
      return a;
    }
    int getB1()
    {
      return b;
    }
    void multi()
    {
      int c = a * b;
      System.out.println(c + " ");
    }
}


public class Main {
  public static void main(String[] args) {
  Scanner sc = new Scanner(System.in);
    B k = new B();
    k.setA(23, 34);
    k.getA();
    k.getA1();
    k.add();
    k.setB(23, 12);
    k.getB();
    k.getB1();
    k.multi();
  }
}



// A :parent
// add :getter and setter  method  
// B :child 
// multi :getter and setter method 
// Main 
// B k through all method access krogey 
// constant
// user input 


import java.util.*;

class A {
    int a ;
    int b;
    void setA(int a,int b)
    {
      this.a = a;
      this.b = b;
    }
    int getA()
    {
      return a;
    }
    int getA1()
    {
      return b;
    }
    void add()
    {
      int c = a + b;
      System.out.println(c + " ");
    }
}
class B extends A{
    int c;
    int d;
    void setB(int c,int d)
    {
      this.c = c;
      this.d = d;
    }
    int getB()
    {
      return a;
    }
    int getB1()
    {
      return b;
    }
    void multi()
    {
      int e = c * d;
      System.out.println(c + " ");
    }
}


public class Main {
  public static void main(String[] args) {
  Scanner sc = new Scanner(System.in);
  System.out.println("enter a ");
  int a = sc.nextInt();
  System.out.println("enter b ");
  int b = sc.nextInt();
  System.out.println("enter c ");
  int c = sc.nextInt();
  System.out.println("enter d ");
  int d = sc.nextInt();
    B k = new B();
    k.setA(a, b);
    k.getA();
    k.getA1();
    k.add();
    k.setB(c, d);
    k.getB();
    k.getB1();
    k.multi();
  }
}




// A :parent
// add :getter and setter  method  
// Main :child 
// multi :getter and setter method 
// Main k through all method access krogey 
// user input
// constant


class A {
  int a ;
  int b;
  void setA(int a,int b)
  {
    this.a = a;
    this.b = b;
  }
  int getA()
  {
    return a;
  }
  int getA1()
  {
    return b;
  }
  void add()
  {
    int c = a + b;
    System.out.println(c + " ");
  }
}
public class Main extends A{
  int a;
  int b;
  void setB(int a,int b)
  {
    this.a = a;
    this.b = b;
  }
  int getB()
  {
    return a;
  }
  int getB1()
  {
    return b;
  }
  void multi()
  {
    int c = a * b;
    System.out.println(c + " ");
  }
public static void main(String[] args) {
  Main k = new Main();
  k.setA(23, 34);
  k.getA();
  k.getA1();
  k.add();
  k.setB(23, 12);
  k.getB();
  k.getB1();
  k.multi();
}
}



// A :parent
// add :getter and setter  method  
// Main :child 
// multi :getter and setter method 
// Main k through all method access krogey 
// user input
// constant


import java.util.*;

class A {
    int a ;
    int b;
    void setA(int a,int b)
    {
      this.a = a;
      this.b = b;
    }
    int getA()
    {
      return a;
    }
    int getA1()
    {
      return b;
    }
    void add()
    {
      int c = a + b;
      System.out.println(c + " ");
    }
}
public class Main extends A {
  int c;
    int d;
    void setB(int c,int d)
    {
      this.c = c;
      this.d = d;
    }
    int getB()
    {
      return c;
    }
    int getB1()
    {
      return c;
    }
    void multi()
    {
      int e = c * d;
      System.out.println(c + " ");
    }
  public static void main(String[] args) {
  Scanner sc = new Scanner(System.in);
  System.out.println("enter a ");
  int a = sc.nextInt();
  System.out.println("enter b ");
  int b = sc.nextInt();
  System.out.println("enter c ");
  int c = sc.nextInt();
  System.out.println("enter d ");
  int d = sc.nextInt();
    Main k = new Main();
    k.setA(a, b);
    k.getA();
    k.getA1();
    k.add();
    k.setB(c, d);
    k.getB();
    k.getB1();
    k.multi();
  }
}



// A :parent
// add :method :no return and no argument  
// B :normal class 
// multi :method: return and no argument   
// C :normal class 
// div :method: return and argument 
// D class :child 
// sub :method:no return and argument 
// Main 
// child k through all method access krogey 
// constant
// user input

import java.util.Scanner;

class A {
    void add ()
    {
      Scanner sc = new Scanner(System.in);
      System.out.println("add value a");
      int a = sc.nextInt();
      System.out.println("add value b");
      int b = sc.nextInt();
      int c = a+b;
      System.out.println(c + "Addtion class A ");
    }
}
class B{
  int multi(){
      Scanner sc = new Scanner(System.in);
      System.out.println("multi value a");
      int a = sc.nextInt();
      System.out.println("multi value b");
      int b = sc.nextInt();
      int c = a*b;
      System.out.println(c + "multiplication class B ");
    return c;
  } 
}
class C{
   int div(int a,int b){
    int c = a/b;
    System.out.println(c + "division class C ");
    return c;
   }
}
class D extends A{
  void sub (int a,int b){
    int c = a-b;
    System.out.println(c + " substerction class D ");
  }

}
public class Main  {
 public static void main(String[] args) {
  Scanner sc = new Scanner(System.in);
  System.out.println("div value a");
  int a = sc.nextInt();
  System.out.println("div value b");
  int b = sc.nextInt();
      System.out.println("sub value c");
      int c = sc.nextInt();
      System.out.println("sub value d");
      int d = sc.nextInt();
      D k = new D();
      B k1 = new B();
      C k2 = new C();
      k.add();
      k.sub(a, b);
      k1.multi();
      k2.div(c, d);
 }
}




// A :parent1
// add :method :no return and no argument  
// B :parent2 class 
// multi :method: return and no argument   
// C :child1 class 
// div :method: return and argument 
// D class :child2 
// sub :method:no return and argument 
// Main 
// dono child k through all method access krogey 
// constant
// user input

import java.util.Scanner;

class A {
    void add ()
    {
      Scanner sc = new Scanner(System.in);
      System.out.println("add value a");
      int a = sc.nextInt();
      System.out.println("add value b");
      int b = sc.nextInt();
      int c = a+b;
      System.out.println(c + "Addtion class A ");
    }
}
class B{
  int multi(){
      Scanner sc = new Scanner(System.in);
      System.out.println("multi value a");
      int a = sc.nextInt();
      System.out.println("multi value b");
      int b = sc.nextInt();
      int c = a*b;
      System.out.println(c + "multiplication class B ");
    return c;
  } 
}
class C extends B{
   int div(int a,int b){
    int c = a/b;
    System.out.println(c + "division class C ");
    return c;
   }
}
class D extends A{
  void sub (int a,int b){
    int c = a-b;
    System.out.println(c + " substerction class D ");
  }

}
public class Main  {
 public static void main(String[] args) {
  Scanner sc = new Scanner(System.in);
  System.out.println("div value a");
  int a = sc.nextInt();
  System.out.println("div value b");
  int b = sc.nextInt();
      System.out.println("sub value c");
      int c = sc.nextInt();
      System.out.println("sub value d");
      int d = sc.nextInt();
      D k = new D();
      C k2 = new C();
      k.add();
      k.sub(a, b);
      k2.multi();
      k2.div(c, d);
 }
}



// A class :parent 
// getter and settor method 
// email 
// password 
// name 
// contact
// B class :child 
// getter and settor method 
// addresss 
// stream :BCA BBA 
// language :english , hindi 
// percentage :float
// Main class 
// access 


import java.util.Scanner;

class A {
 String email ;
 String password ;
 String name ;
 int contact;

 void setA(String email ,String password ,String name ,int contact){
    this.email = email;
    this.password = password;
    this.name = name;
    this.contact = contact;
}
String getA(){
  return email;
}
String getA1(){
  return password;
}
String getA2(){
  return name;
}
int getA3(){
  return contact;
}
}
class B extends A{
 String addresss ;
 String stream  ;
 String language ;
 float percentage ;
 void setB(String addresss ,String stream  ,String language ,float percentage ){
     this.addresss = addresss;
     this.stream = stream;
     this.language = language;
     this.percentage = percentage;
 }
 String getB(){
  return addresss;
 }
 String getB1(){
  return stream;
 }
 String getB2(){
  return language;
 }
 float getB3(){
  return percentage;
 }
}

public class Main  {
 public static void main(String[] args) {
  Scanner sc = new Scanner(System.in);
  System.out.println(" enter Email ");
  String a = sc.nextLine();
  System.out.println(" enter password ");
  String b = sc.nextLine();
  System.out.println(" enter name ");
  String c = sc.nextLine();
  System.out.println(" enter contect ");
  int d = sc.nextInt();
  sc.nextLine();
  System.out.println(" enter address ");
  String e = sc.nextLine();
  System.out.println(" enter stream ");
  String f = sc.nextLine();
  System.out.println(" enter language ");
  String g = sc.nextLine();
  System.out.println(" enter percentage ");
  float h = sc.nextFloat();
  B k = new B();
  k.setA(a, b, c,d);
  k.setB(e, f, g, h);
  System.out.println(k.getA());
  System.out.println(k.getA1());
  System.out.println(k.getA2());
  System.out.println(k.getA3());

  System.out.println(k.getB());
  System.out.println(k.getB1());
  System.out.println(k.getB2());
  System.out.println(k.getB3());

     
 }
}






